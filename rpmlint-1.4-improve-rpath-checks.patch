diff -Naur rpmlint-1.4.orig/BinariesCheck.py rpmlint-1.4/BinariesCheck.py
--- rpmlint-1.4.orig/BinariesCheck.py   2013-11-05 15:30:12.781614299 +0400
+++ rpmlint-1.4/BinariesCheck.py        2013-11-05 15:19:18.000000000 +0400
@@ -180,6 +180,7 @@
 if pie_exec_re:
     pie_exec_re = re.compile(pie_exec_re)
 usr_lib_regex = re.compile('^/usr/lib(64)?/')
+origin_rpath_regex = re.compile('^\\$ORIGIN')
 bin_regex = re.compile('^(/usr(/X11R6)?)?/s?bin/')
 soversion_regex = re.compile('.*?([0-9][.0-9]*)\\.so|.*\\.so\\.([0-9][.0-9]*).*')
 reference_regex = re.compile('\.la$|^/usr/lib(64)?/pkgconfig/')
@@ -335,11 +336,21 @@
 
             # rpath ?
             if bin_info.rpath:
+                wrong_rpaths = []
+                system_rpaths = []
                 for p in bin_info.rpath:
-                    if p in system_lib_paths or not usr_lib_regex.search(p):
-                        printError(pkg, 'binary-or-shlib-defines-rpath',
-                                   fname, bin_info.rpath)
-                        break
+                    if p in system_lib_paths:
+                        system_rpaths.append(p)
+                    elif not usr_lib_regex.search(p) and \
+                            not origin_rpath_regex.search(p):
+                        wrong_rpaths.append(p)
+
+                if len(system_rpaths) > 0:
+                    printError(pkg, 'binary-or-shlib-defines-rpath-on-system-dir',
+                               fname, system_rpaths)
+                if len(wrong_rpaths) > 0:
+                    printError(pkg, 'binary-or-shlib-defines-rpath-outside-usr-lib',
+                               fname, wrong_rpaths)
 
             is_exec = 'executable' in pkgfile.magic
             is_shobj = 'shared object' in pkgfile.magic
@@ -466,13 +478,19 @@
 Another common mistake that causes this problem is linking with
 ``gcc -Wl,-shared'' instead of ``gcc -shared''.''',
 
-'binary-or-shlib-defines-rpath',
-'''The binary or shared library defines `RPATH'. Usually this is a
-bad thing because it hardcodes the path to search libraries and so
+'binary-or-shlib-defines-rpath-on-system-dir',
+'''The binary or shared library defines `RPATH' and sets it to a
+system directory which is looked for libraries in any case. Usually
+this is a bad thing because it hardcodes the path to search libraries and so
 makes it difficult to move libraries around.  Most likely you will find a
 Makefile with a line like: gcc test.o -o test -Wl,--rpath.  Also, sometimes
 configure scripts provide a --disable-rpath flag to avoid this.''',
 
+'binary-or-shlib-defines-rpath-outside-usr-lib',
+'''The binary or shared library defines `RPATH' and sets it to a
+directory outside /usr/lib or /usr/lib64. For consistency, it is recommended
+to put package-specific libraries to subfolders of /usr/lib.''',
+
 'statically-linked-binary',
 '''The package installs a statically linked binary or object file.
 
